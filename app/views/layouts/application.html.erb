<!DOCTYPE html>
<html>
  <head>
    <title><%= content_for(:title) || "Supra Beach Volley" %></title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= yield :head %>

    <%# Enable PWA manifest for installable apps (make sure to enable in config/routes.rb too!) %>
    <%#= tag.link rel: "manifest", href: pwa_manifest_path(format: :json) %>

    <link rel="icon" href="/icon.png" type="image/png">
    <link rel="icon" href="/icon.svg" type="image/svg+xml">
    <link rel="apple-touch-icon" href="/icon.png">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@400;500;600;700&display=swap" rel="stylesheet">

    <script>
      window.tailwind = window.tailwind || {};
      window.tailwind.config = {
        theme: {
          extend: {
            colors: {
              brand: {
                DEFAULT: "#FF8A3D",
                dark: "#F97316",
                soft: "#FFE7C7"
              },
              surf: "#38BDF8",
              tide: "#0EA5E9",
              sand: "#FCD34D",
              coral: "#FB7185",
              ink: "#0F172A",
              mist: "#E0F2FE",
              night: "#0B1120"
            },
            fontFamily: {
              sans: ["'Plus Jakarta Sans'", "'Sarabun'", "system-ui", "-apple-system", "BlinkMacSystemFont", "'Segoe UI'", "sans-serif"]
            },
            boxShadow: {
              card: "0 35px 60px -15px rgba(15, 23, 42, 0.25)",
              glow: "0 20px 45px -12px rgba(79, 70, 229, 0.35)"
            },
            animation: {
              float: "float 8s ease-in-out infinite",
              pulsefast: "pulsefast 2s cubic-bezier(0.4, 0, 0.6, 1) infinite",
              pulsebeat: "pulsebeat 1.4s ease-in-out infinite"
            },
            keyframes: {
              float: {
                "0%, 100%": { transform: "translateY(0px)" },
                "50%": { transform: "translateY(-14px)" }
              },
              pulsefast: {
                "0%, 100%": { opacity: "1" },
                "50%": { opacity: "0.45" }
              },
              pulsebeat: {
                "0%": { transform: "scale(1)" },
                "50%": { transform: "scale(1.08)" },
                "100%": { transform: "scale(1)" }
              }
            }
          }
        }
      };
    </script>

    <script src="https://cdn.tailwindcss.com?plugins=line-clamp"></script>
    <%# Includes all stylesheet files in app/assets/stylesheets for any custom overrides %>
    <%= stylesheet_link_tag :app, "data-turbo-track": "reload" %>
  </head>

  <body class="bg-gradient-to-b from-surf/30 via-white to-sand/20 min-h-screen text-ink font-sans antialiased relative" data-app-shell>
    <div aria-hidden="true" class="pointer-events-none fixed inset-x-0 top-0 -z-10 h-[720px] overflow-hidden">
      <div class="absolute left-1/2 -translate-x-1/2 top-[-360px] aspect-[5/3] w-[130vw] rounded-full bg-gradient-to-br from-tide/40 via-brand/40 to-sand/40 blur-3xl opacity-90"></div>
      <div class="absolute left-1/2 -translate-x-1/2 top-[-120px] aspect-square w-[480px] rounded-full bg-gradient-to-br from-brand/50 via-sand/40 to-white/40 blur-3xl opacity-70"></div>
    </div>

    <main class="min-h-screen">
      <%= yield %>
    </main>

    <%= render "shared/experience_portal" %>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const languageButtons = document.querySelectorAll("[data-language-toggle]");
        const modalTriggers = document.querySelectorAll("[data-modal-trigger]");
        const modalClosers = document.querySelectorAll("[data-modal-close]");
        const countdownTargets = document.querySelectorAll("[data-countdown-end]");
        const body = document.body;
        const storedLanguage = window.localStorage.getItem("ydp-language") || "en";

        const updateLanguage = (language) => {
          document.documentElement.lang = language === "th" ? "th" : "en";
          document.querySelectorAll("[data-i18n]").forEach((node) => {
            const key = node.dataset.i18n;
            const thai = node.dataset.i18nTh;
            const english = node.dataset.i18nEn;
            const value = language === "th" ? thai : english;
            if (!value) return;
            if (node instanceof HTMLInputElement || node instanceof HTMLTextAreaElement) {
              node.placeholder = value;
            } else {
              node.textContent = value;
            }
          });
          languageButtons.forEach((button) => {
            button.dataset.languageCurrent = language;
            button.querySelectorAll("[data-language-label]").forEach((labelNode) => {
              const label = language === "th" ? labelNode.dataset.languageLabelTh : labelNode.dataset.languageLabelEn;
              if (label) labelNode.textContent = label;
            });
          });
          window.localStorage.setItem("ydp-language", language);
        };

        updateLanguage(storedLanguage);

        languageButtons.forEach((button) => {
          button.addEventListener("click", () => {
            const nextLanguage = button.dataset.languageCurrent === "th" ? "en" : "th";
            updateLanguage(nextLanguage);
          });
        });

        const toggleModal = (identifier, shouldOpen) => {
          const modal = document.getElementById(identifier);
          if (!modal) return;
          modal.classList.toggle("hidden", !shouldOpen);
          modal.classList.toggle("flex", shouldOpen);
          body.classList.toggle("overflow-hidden", shouldOpen);
          if (shouldOpen) {
            modal.querySelectorAll("[autofocus]").forEach((input) => input.focus());
          }
        };

        modalTriggers.forEach((trigger) => {
          trigger.addEventListener("click", () => toggleModal(trigger.dataset.modalTrigger, true));
        });

        modalClosers.forEach((closer) => {
          closer.addEventListener("click", () => toggleModal(closer.dataset.modalClose, false));
        });

        document.querySelectorAll("[data-modal]").forEach((modal) => {
          modal.addEventListener("click", (event) => {
            if (event.target === modal) {
              toggleModal(modal.id, false);
            }
          });
        });

        countdownTargets.forEach((container) => {
          const endTime = container.dataset.countdownEnd;
          if (!endTime) return;
          const displayNodes = container.querySelectorAll("[data-countdown-display]");
          if (!displayNodes.length) return;
          const end = new Date(endTime).getTime();

          let intervalId;

          const renderCountdown = () => {
            const now = Date.now();
            const distance = Math.max(end - now, 0);
            const totalSeconds = Math.floor(distance / 1000);
            const hours = String(Math.floor(totalSeconds / 3600)).padStart(2, "0");
            const minutes = String(Math.floor((totalSeconds % 3600) / 60)).padStart(2, "0");
            const seconds = String(totalSeconds % 60).padStart(2, "0");
            const formatted = `${hours}:${minutes}:${seconds}`;
            displayNodes.forEach((node) => (node.textContent = formatted));
            if (distance <= 0) {
              clearInterval(intervalId);
            }
          };

          renderCountdown();
          intervalId = window.setInterval(renderCountdown, 1000);
        });

        const chatForm = document.getElementById("ai-consult-form");
        if (chatForm) {
          const input = chatForm.querySelector("input[name='message']");
          const conversation = document.getElementById("ai-consult-thread");
          const thinking = document.getElementById("ai-consult-thinking");
          const sampleReplies = [
            "ฉันแนะนำให้จับคู่สินค้าชิ้นนี้กับแจ็คเก็ตโทนสีอบอุ่นเพื่อให้ลุคสบายแต่ยังดูหรูหรา",
            "จากรีวิวล่าสุด ลูกค้าชอบเนื้อผ้าที่ระบายอากาศได้ดี เหมาะกับอากาศเมืองไทย",
            "ขนาดที่ได้รับความนิยมคือ M หากต้องการใส่สบายๆ แนะนำเพิ่มหนึ่งไซส์",
            "สินค้านี้กำลังลด 15% หากชำระด้วย SupraPay ภายในวันนี้"
          ];

          chatForm.addEventListener("submit", (event) => {
            event.preventDefault();
            const message = input.value.trim();
            if (!message) return;
            const userBubble = document.createElement("div");
            userBubble.className = "flex justify-end";
            userBubble.innerHTML = `<div class="max-w-[70%] rounded-3xl bg-brand text-white px-4 py-3 text-sm shadow-glow">${message}</div>`;
            conversation.appendChild(userBubble);
            input.value = "";
            thinking.classList.remove("hidden");
            conversation.scrollTop = conversation.scrollHeight;

            setTimeout(() => {
              const reply = sampleReplies[Math.floor(Math.random() * sampleReplies.length)];
              const aiBubble = document.createElement("div");
              aiBubble.className = "flex justify-start";
              aiBubble.innerHTML = `<div class=\"max-w-[80%] rounded-3xl bg-white px-4 py-3 text-sm text-ink shadow-sm border border-brand/10\">${reply}</div>`;
              conversation.appendChild(aiBubble);
              thinking.classList.add("hidden");
              conversation.scrollTop = conversation.scrollHeight;
            }, 900);
          });
        }
      });
    </script>
  </body>
</html>
